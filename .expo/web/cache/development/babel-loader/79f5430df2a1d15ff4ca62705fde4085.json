{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\YourBand\\\\yourband-app\\\\src\\\\Templates\\\\Dashboard\\\\Footer\\\\index.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { colors } from \"../../../Styles\";\nimport { Icons } from \"../../../Constants/tabs\";\nimport styles from \"./styles\";\nexport default function Footer(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      navigation = _ref.navigation;\n  var focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  if (focusedOptions.tabBarVisible === false) {\n    return null;\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, state.routes.map(function (route, index) {\n    var options = descriptors[route.key].options;\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var icon = label ? Icons[label] : null;\n    var isFocused = state.index === index;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n\n      if (!isFocused && !event.defaultPrevented) {\n        navigation.navigate(route.name);\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n\n    return React.createElement(TouchableOpacity, {\n      accessibilityRole: \"button\",\n      accessibilityStates: isFocused ? ['selected'] : [],\n      accessibilityLabel: options.tabBarAccessibilityLabel,\n      testID: options.tabBarTestID,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      style: styles.tab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, icon ? React.createElement(Icon, {\n      name: icon,\n      size: 30,\n      color: isFocused ? colors.primary : colors.light,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }) : null);\n  }));\n}","map":{"version":3,"sources":["C:/Projects/YourBand/yourband-app/src/Templates/Dashboard/Footer/index.js"],"names":["React","Icon","colors","Icons","styles","Footer","state","descriptors","navigation","focusedOptions","routes","index","key","options","tabBarVisible","container","map","route","label","tabBarLabel","undefined","title","name","icon","isFocused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","navigate","onLongPress","tabBarAccessibilityLabel","tabBarTestID","tab","primary","light"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,OAAOC,IAAP;AAEA,SAASC,MAAT;AACA,SAASC,KAAT;AACA,OAAOC,MAAP;AAEA,eAAe,SAASC,MAAT,OAAoD;AAAA,MAAlCC,KAAkC,QAAlCA,KAAkC;AAAA,MAA3BC,WAA2B,QAA3BA,WAA2B;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACjE,MAAMC,cAAc,GAAGF,WAAW,CAACD,KAAK,CAACI,MAAN,CAAaJ,KAAK,CAACK,KAAnB,EAA0BC,GAA3B,CAAX,CAA2CC,OAAlE;;AAEA,MAAIJ,cAAc,CAACK,aAAf,KAAiC,KAArC,EAA4C;AAC1C,WAAO,IAAP;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,CAACI,MAAN,CAAaM,GAAb,CAAiB,UAACC,KAAD,EAAQN,KAAR,EAAkB;AAAA,QAC1BE,OAD0B,GACdN,WAAW,CAACU,KAAK,CAACL,GAAP,CADG,CAC1BC,OAD0B;AAElC,QAAMK,KAAK,GACTL,OAAO,CAACM,WAAR,KAAwBC,SAAxB,GACIP,OAAO,CAACM,WADZ,GAEIN,OAAO,CAACQ,KAAR,KAAkBD,SAAlB,GACAP,OAAO,CAACQ,KADR,GAEAJ,KAAK,CAACK,IALZ;AAOA,QAAMC,IAAI,GAAGL,KAAK,GAAGf,KAAK,CAACe,KAAD,CAAR,GAAkB,IAApC;AAEA,QAAMM,SAAS,GAAGlB,KAAK,CAACK,KAAN,KAAgBA,KAAlC;;AAEA,QAAMc,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,UAAMC,KAAK,GAAGlB,UAAU,CAACmB,IAAX,CAAgB;AAC5BC,QAAAA,IAAI,EAAE,UADsB;AAE5BC,QAAAA,MAAM,EAAEZ,KAAK,CAACL,GAFc;AAG5BkB,QAAAA,iBAAiB,EAAE;AAHS,OAAhB,CAAd;;AAMA,UAAI,CAACN,SAAD,IAAc,CAACE,KAAK,CAACK,gBAAzB,EAA2C;AACzCvB,QAAAA,UAAU,CAACwB,QAAX,CAAoBf,KAAK,CAACK,IAA1B;AACD;AACF,KAVD;;AAYA,QAAMW,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBzB,MAAAA,UAAU,CAACmB,IAAX,CAAgB;AACdC,QAAAA,IAAI,EAAE,cADQ;AAEdC,QAAAA,MAAM,EAAEZ,KAAK,CAACL;AAFA,OAAhB;AAID,KALD;;AAOA,WACE,oBAAC,gBAAD;AACE,MAAA,iBAAiB,EAAC,QADpB;AAEE,MAAA,mBAAmB,EAAEY,SAAS,GAAG,CAAC,UAAD,CAAH,GAAkB,EAFlD;AAGE,MAAA,kBAAkB,EAAEX,OAAO,CAACqB,wBAH9B;AAIE,MAAA,MAAM,EAAErB,OAAO,CAACsB,YAJlB;AAKE,MAAA,OAAO,EAAEV,OALX;AAME,MAAA,WAAW,EAAEQ,WANf;AAOE,MAAA,KAAK,EAAE7B,MAAM,CAACgC,GAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUIb,IAAI,GACF,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEA,IADR;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,KAAK,EAAEC,SAAS,GAAGtB,MAAM,CAACmC,OAAV,GAAoBnC,MAAM,CAACoC,KAH7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,GAMH,IAhBL,CADF;AAwBD,GAxDA,CADH,CADF;AA6DD","sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\n\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\n\r\nimport { colors } from '../../../Styles';\r\nimport { Icons } from '../../../Constants/tabs';\r\nimport styles from './styles';\r\n\r\nexport default function Footer({ state, descriptors, navigation }) {\r\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\r\n\r\n  if (focusedOptions.tabBarVisible === false) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {state.routes.map((route, index) => {\r\n        const { options } = descriptors[route.key];\r\n        const label =\r\n          options.tabBarLabel !== undefined\r\n            ? options.tabBarLabel\r\n            : options.title !== undefined\r\n            ? options.title\r\n            : route.name;\r\n\r\n        const icon = label ? Icons[label] : null;\r\n\r\n        const isFocused = state.index === index;\r\n\r\n        const onPress = () => {\r\n          const event = navigation.emit({\r\n            type: 'tabPress',\r\n            target: route.key,\r\n            canPreventDefault: true,\r\n          });\r\n\r\n          if (!isFocused && !event.defaultPrevented) {\r\n            navigation.navigate(route.name);\r\n          }\r\n        };\r\n\r\n        const onLongPress = () => {\r\n          navigation.emit({\r\n            type: 'tabLongPress',\r\n            target: route.key,\r\n          });\r\n        };\r\n\r\n        return (\r\n          <TouchableOpacity\r\n            accessibilityRole=\"button\"\r\n            accessibilityStates={isFocused ? ['selected'] : []}\r\n            accessibilityLabel={options.tabBarAccessibilityLabel}\r\n            testID={options.tabBarTestID}\r\n            onPress={onPress}\r\n            onLongPress={onLongPress}\r\n            style={styles.tab}\r\n          >\r\n            {\r\n              icon ?\r\n                <Icon\r\n                  name={icon}\r\n                  size={30}\r\n                  color={isFocused ? colors.primary : colors.light}\r\n                />\r\n              :null\r\n            }\r\n            {/* <Text style={{ color: isFocused ? '#673ab7' : '#222' }}>\r\n              {label}\r\n            </Text> */}\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}