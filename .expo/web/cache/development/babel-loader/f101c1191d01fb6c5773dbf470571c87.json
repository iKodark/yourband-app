{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Projects\\\\YourBand\\\\yourband-app\\\\node_modules\\\\react-native-tiny-toast\\\\lib\\\\Toast.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport RootSiblings from 'react-native-root-siblings';\nimport ToastContainer, { position, duration } from \"./ToastContainer\";\n\nvar Toast = function (_Component) {\n  _inherits(Toast, _Component);\n\n  var _super = _createSuper(Toast);\n\n  function Toast() {\n    var _this;\n\n    _classCallCheck(this, Toast);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.toast = null;\n    return _this;\n  }\n\n  _createClass(Toast, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.toast = new RootSiblings(React.createElement(ToastContainer, _extends({}, this.props, {\n        duration: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      })));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps) {\n      this.toast.update(React.createElement(ToastContainer, _extends({}, nextProps, {\n        duration: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      })));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.toast.destroy();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }], [{\n    key: \"showSuccess\",\n    value: function showSuccess(message) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.show(message, _objectSpread({\n        containerStyle: {\n          minWidth: 105,\n          minHeight: 105,\n          backgroundColor: 'rgba(30,30,30,.85)'\n        },\n        imgStyle: {\n          width: 45,\n          height: 45\n        },\n        textStyle: {\n          marginTop: 10\n        },\n        position: this.position.CENTER,\n        imgSource: require(\"./icon_success.png\")\n      }, options));\n    }\n  }, {\n    key: \"showLoading\",\n    value: function showLoading(message) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.show(message, _objectSpread({\n        containerStyle: {\n          minWidth: 90,\n          minHeight: 80,\n          backgroundColor: 'rgba(30,30,30,.85)'\n        },\n        textStyle: {\n          fontSize: 14,\n          top: 6\n        },\n        mask: true,\n        duration: 0,\n        loading: true,\n        position: this.position.CENTER\n      }, options));\n    }\n  }, {\n    key: \"show\",\n    value: function show(message) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var onHidden = options.onHidden;\n      var toast;\n\n      options.onHidden = function () {\n        toast && toast.destroy();\n        onHidden && onHidden();\n      };\n\n      toast = new RootSiblings(React.createElement(ToastContainer, _extends({}, options, {\n        visible: true,\n        showText: !!message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }), message));\n      this.toast = toast;\n      return toast;\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(toast) {\n      if (toast instanceof RootSiblings) {\n        toast.destroy();\n      } else if (this.toast instanceof RootSiblings) {\n        this.toast.destroy();\n      }\n    }\n  }]);\n\n  return Toast;\n}(Component);\n\nToast.propTypes = ToastContainer.propTypes;\nToast.position = position;\nToast.duration = duration;\nexport { RootSiblings as Manager };\nexport default Toast;","map":{"version":3,"sources":["C:/Projects/YourBand/yourband-app/node_modules/react-native-tiny-toast/lib/Toast.js"],"names":["React","Component","RootSiblings","ToastContainer","position","duration","Toast","toast","props","nextProps","update","destroy","message","options","show","containerStyle","minWidth","minHeight","backgroundColor","imgStyle","width","height","textStyle","marginTop","CENTER","imgSource","require","fontSize","top","mask","loading","onHidden","propTypes","Manager"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport RootSiblings from 'react-native-root-siblings'\nimport ToastContainer, {position, duration} from './ToastContainer'\n\nclass Toast extends Component {\n  static propTypes = ToastContainer.propTypes\n  static position = position\n  static duration = duration\n\n  static showSuccess(message, options = {}) {\n    this.show(message, {\n      containerStyle: {\n        minWidth: 105,\n        minHeight: 105,\n        backgroundColor: 'rgba(30,30,30,.85)'\n      },\n      imgStyle: {\n        width: 45,\n        height: 45\n      },\n      textStyle: {\n        marginTop: 10\n      },\n      position: this.position.CENTER,\n      imgSource: require('./icon_success.png'),\n      ...options\n    })\n  }\n\n  static showLoading(message, options = {}) {\n    this.show(message, {\n      containerStyle: {\n        minWidth: 90,\n        minHeight: 80,\n        backgroundColor: 'rgba(30,30,30,.85)'\n      },\n      textStyle: {\n        fontSize: 14,\n        top: 6\n      },\n      mask: true,\n      duration: 0,\n      loading: true,\n      position: this.position.CENTER,\n      ...options\n    })\n  }\n\n  static show(message, options = {}) {\n    let onHidden = options.onHidden\n    let toast\n    options.onHidden = function () {\n      toast && toast.destroy()\n      onHidden && onHidden()\n    }\n    toast = new RootSiblings(\n      <ToastContainer\n        {...options}\n        visible={true}\n        showText={!!message}>\n        {message}\n      </ToastContainer>)\n    this.toast = toast\n    return toast\n  }\n\n  static hide(toast) {\n    if (toast instanceof RootSiblings) {\n      toast.destroy()\n    } else if (this.toast instanceof RootSiblings) {\n      this.toast.destroy()\n    }\n  }\n\n  toast = null\n\n  componentWillMount() {\n    this.toast = new RootSiblings(\n      <ToastContainer\n        {...this.props}\n        duration={0}\n      />)\n  };\n\n  componentDidUpdate(nextProps) {\n    this.toast.update(\n      <ToastContainer\n        {...nextProps}\n        duration={0}/>)\n  }\n\n  componentWillUnmount() {\n    this.toast.destroy()\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport {\n  RootSiblings as Manager\n}\nexport default Toast"]},"metadata":{},"sourceType":"module"}