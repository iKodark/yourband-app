{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Projects\\\\YourBand\\\\yourband-app\\\\src\\\\Pages\\\\Signin\\\\index.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Async } from \"react-native-web/dist/index\";\nimport { Formik } from 'formik';\nimport Auth from \"../../Templates/Auth\";\nimport { Button, Input, Notify } from \"../../Components\";\nimport styles from \"./styles\";\nimport { signin as Validation } from \"../../Validations\";\nimport api from \"../../Services/Api\";\nimport { setToken, setStorage } from \"../../Services/AsyncStorage\";\nexport default function Signin(_ref) {\n  var navigation = _ref.navigation;\n  var initialValues = {\n    login: '',\n    password: ''\n  };\n\n  var submit = function submit(data) {\n    return _regeneratorRuntime.async(function submit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            api.post('/signin', {\n              login: data.login,\n              password: data.password\n            }).then(function (res) {\n              var _res$data = res.data,\n                  data = _res$data.data,\n                  message = _res$data.message;\n              Notify(message, 'success');\n              setStorage('user', data.user);\n              setToken(data.token);\n              navigation.navigate('Dashboard');\n            }).catch(function (err) {\n              var message = err.response.data.message;\n              Notify(message, 'error');\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var renderForm = function renderForm(_ref2) {\n    var values = _ref2.values,\n        setFieldValue = _ref2.setFieldValue,\n        setFieldTouched = _ref2.setFieldTouched,\n        touched = _ref2.touched,\n        errors = _ref2.errors,\n        handleSubmit = _ref2.handleSubmit;\n    return React.createElement(View, {\n      style: styles.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }, React.createElement(Input, {\n      name: \"login\",\n      label: \"Email or Username\",\n      autoCorrect: false,\n      autoCapitalize: \"none\",\n      returnKeyType: \"next\",\n      onChange: setFieldValue,\n      onTouch: setFieldTouched,\n      value: values.login,\n      error: touched.login && errors.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }), React.createElement(Input, {\n      name: \"password\",\n      label: \"Password\",\n      autoCompleteType: \"password\",\n      secureTextEntry: true,\n      returnKeyType: \"next\",\n      onChange: setFieldValue,\n      onTouch: setFieldTouched,\n      value: values.password,\n      error: touched.password && errors.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }), React.createElement(Button, {\n      action: handleSubmit,\n      style: styles.buttonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, \"Log in\"));\n  };\n\n  return React.createElement(Auth, {\n    styleLogo: styles.logo,\n    typeLogo: \"symbol\",\n    navigation: navigation,\n    back: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : \"height\",\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: submit,\n    validationSchema: Validation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, renderForm)))));\n}\n;","map":{"version":3,"sources":["C:/Projects/YourBand/yourband-app/src/Pages/Signin/index.js"],"names":["React","Async","Formik","Auth","Button","Input","Notify","styles","signin","Validation","api","setToken","setStorage","Signin","navigation","initialValues","login","password","submit","data","post","then","res","message","user","token","navigate","catch","err","response","renderForm","values","setFieldValue","setFieldTouched","touched","errors","handleSubmit","form","buttonSubmit","logo","Platform","OS","container"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;SAMEC,K;AAEF,SAAQC,MAAR,QAAqB,QAArB;AAEA,OAAOC,IAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB;AACA,OAAOC,MAAP;AACA,SAASC,MAAM,IAAIC,UAAnB;AACA,OAAOC,GAAP;AAEA,SAASC,QAAT,EAAmBC,UAAnB;AAEA,eAAe,SAASC,MAAT,OAAiC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAE9C,MAAMC,aAAa,GAAG;AACpBC,IAAAA,KAAK,EAAE,EADa;AAEpBC,IAAAA,QAAQ,EAAE;AAFU,GAAtB;;AAKA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAEbT,YAAAA,GAAG,CAACU,IAAJ,CAAS,SAAT,EAAoB;AAClBJ,cAAAA,KAAK,EAAEG,IAAI,CAACH,KADM;AAElBC,cAAAA,QAAQ,EAAEE,IAAI,CAACF;AAFG,aAApB,EAICI,IAJD,CAIM,UAAAC,GAAG,EAAI;AAAA,8BAEaA,GAAG,CAACH,IAFjB;AAAA,kBAEJA,IAFI,aAEJA,IAFI;AAAA,kBAEEI,OAFF,aAEEA,OAFF;AAGXjB,cAAAA,MAAM,CAACiB,OAAD,EAAU,SAAV,CAAN;AAEAX,cAAAA,UAAU,CAAC,MAAD,EAASO,IAAI,CAACK,IAAd,CAAV;AACAb,cAAAA,QAAQ,CAACQ,IAAI,CAACM,KAAN,CAAR;AAEAX,cAAAA,UAAU,CAACY,QAAX,CAAoB,WAApB;AACD,aAbD,EAcCC,KAdD,CAcO,UAAAC,GAAG,EAAI;AAAA,kBAEJL,OAFI,GAEQK,GAAG,CAACC,QAAJ,CAAaV,IAFrB,CAEJI,OAFI;AAGZjB,cAAAA,MAAM,CAACiB,OAAD,EAAU,OAAV,CAAN;AACD,aAlBD;;AAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAuBA,MAAMO,UAAU,GAAG,SAAbA,UAAa;AAAA,QACjBC,MADiB,SACjBA,MADiB;AAAA,QAEjBC,aAFiB,SAEjBA,aAFiB;AAAA,QAGjBC,eAHiB,SAGjBA,eAHiB;AAAA,QAIjBC,OAJiB,SAIjBA,OAJiB;AAAA,QAKjBC,MALiB,SAKjBA,MALiB;AAAA,QAMjBC,YANiB,SAMjBA,YANiB;AAAA,WAQjB,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE7B,MAAM,CAAC8B,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAC,mBAFR;AAGE,MAAA,WAAW,EAAE,KAHf;AAIE,MAAA,cAAc,EAAC,MAJjB;AAKE,MAAA,aAAa,EAAC,MALhB;AAME,MAAA,QAAQ,EAAEL,aANZ;AAOE,MAAA,OAAO,EAAEC,eAPX;AAQE,MAAA,KAAK,EAAEF,MAAM,CAACf,KARhB;AASE,MAAA,KAAK,EAAEkB,OAAO,CAAClB,KAAR,IAAiBmB,MAAM,CAACnB,KATjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAcE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,gBAAgB,EAAC,UAHnB;AAIE,MAAA,eAAe,EAAE,IAJnB;AAKE,MAAA,aAAa,EAAC,MALhB;AAME,MAAA,QAAQ,EAAEgB,aANZ;AAOE,MAAA,OAAO,EAAEC,eAPX;AAQE,MAAA,KAAK,EAAEF,MAAM,CAACd,QARhB;AASE,MAAA,KAAK,EAAEiB,OAAO,CAACjB,QAAR,IAAoBkB,MAAM,CAAClB,QATpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EA0BE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAEmB,YAAhB;AAA8B,MAAA,KAAK,EAAE7B,MAAM,CAAC+B,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BF,CARiB;AAAA,GAAnB;;AAyCA,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE/B,MAAM,CAACgC,IAAxB;AAA8B,IAAA,QAAQ,EAAC,QAAvC;AAAgD,IAAA,UAAU,EAAEzB,UAA5D;AAAwE,IAAA,IAAI,EAAE,IAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,oBAAD;AAAsB,IAAA,QAAQ,EAAE0B,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,QAApE;AAA8E,IAAA,KAAK,EAAElC,MAAM,CAACmC,SAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE3B,aADjB;AAEE,IAAA,QAAQ,EAAEG,MAFZ;AAGE,IAAA,gBAAgB,EAAET,UAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGqB,UALH,CAFF,CADF,CADF,CAFJ,CADF;AAqBD;AAAA","sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  ScrollView,\r\n  Async\r\n} from 'react-native';\r\nimport {Formik} from 'formik';\r\n\r\nimport Auth from '../../Templates/Auth';\r\nimport { Button, Input, Notify } from '../../Components';\r\nimport styles from './styles';\r\nimport { signin as Validation } from '../../Validations';\r\nimport api from '../../Services/Api';\r\n\r\nimport { setToken, setStorage } from '../../Services/AsyncStorage';\r\n\r\nexport default function Signin ({ navigation }) {\r\n\r\n  const initialValues = {\r\n    login: '',\r\n    password: ''\r\n  };\r\n\r\n  const submit = async (data) => {\r\n    // navigation.navigate('Dashboard');\r\n    api.post('/signin', {\r\n      login: data.login,\r\n      password: data.password\r\n    })\r\n    .then(res => {\r\n\r\n      const {data, message} = res.data;\r\n      Notify(message, 'success');\r\n\r\n      setStorage('user', data.user);\r\n      setToken(data.token);\r\n\r\n      navigation.navigate('Dashboard');\r\n    })\r\n    .catch(err => {\r\n\r\n      const { message } = err.response.data;\r\n      Notify(message, 'error');\r\n    })\r\n  }\r\n\r\n  const renderForm = ({\r\n    values,\r\n    setFieldValue,\r\n    setFieldTouched,\r\n    touched,\r\n    errors,\r\n    handleSubmit\r\n  }) => (\r\n    <View style={styles.form}>\r\n      \r\n      <Input\r\n        name=\"login\"\r\n        label=\"Email or Username\"\r\n        autoCorrect={false}\r\n        autoCapitalize=\"none\"\r\n        returnKeyType=\"next\"\r\n        onChange={setFieldValue}\r\n        onTouch={setFieldTouched}\r\n        value={values.login}\r\n        error={touched.login && errors.login}\r\n      />\r\n\r\n      <Input\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        autoCompleteType=\"password\"\r\n        secureTextEntry={true}\r\n        returnKeyType=\"next\"\r\n        onChange={setFieldValue}\r\n        onTouch={setFieldTouched}\r\n        value={values.password}\r\n        error={touched.password && errors.password}\r\n      />\r\n\r\n      <Button action={handleSubmit} style={styles.buttonSubmit}>\r\n        Log in\r\n      </Button>\r\n\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <Auth styleLogo={styles.logo} typeLogo=\"symbol\" navigation={navigation} back={true} >\r\n\r\n        <KeyboardAvoidingView behavior={Platform.OS === 'ios' ? 'padding' : \"height\"} style={styles.container}>\r\n          <ScrollView>\r\n            <View>\r\n\r\n              <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={submit}\r\n                validationSchema={Validation}\r\n              >\r\n                {renderForm}\r\n              </Formik>\r\n\r\n            </View>\r\n          </ScrollView>\r\n        </KeyboardAvoidingView>\r\n\r\n    </Auth>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}