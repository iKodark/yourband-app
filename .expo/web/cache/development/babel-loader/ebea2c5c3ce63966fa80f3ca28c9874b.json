{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\YourBand\\\\yourband-app\\\\src\\\\Pages\\\\Signup\\\\index.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Formik } from 'formik';\nimport Auth from \"../../Templates/Auth\";\nimport { Button, Input, Notify } from \"../../Components\";\nimport styles from \"./styles\";\nimport { signup as Validation } from \"../../Validations\";\nimport api from \"../../Services/Api\";\nexport default function Signup(_ref) {\n  var navigation = _ref.navigation;\n  var initialValues = {\n    name: '',\n    username: '',\n    email: '',\n    password: '',\n    repeat_password: ''\n  };\n\n  var submit = function submit(data) {\n    api.post('/signup', {\n      email: data.email,\n      name: data.name,\n      password: data.password,\n      username: data.username\n    }).then(function (res) {\n      var _res$data = res.data,\n          data = _res$data.data,\n          message = _res$data.message;\n      Notify(message, 'success');\n    }).catch(function (err) {\n      var message = err.response.data.message;\n      Notify(message, 'error');\n    });\n  };\n\n  var renderForm = function renderForm(_ref2) {\n    var values = _ref2.values,\n        setFieldValue = _ref2.setFieldValue,\n        setFieldTouched = _ref2.setFieldTouched,\n        touched = _ref2.touched,\n        errors = _ref2.errors,\n        handleSubmit = _ref2.handleSubmit;\n    return React.createElement(View, {\n      style: styles.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, React.createElement(Input, {\n      name: \"name\",\n      label: \"Name\",\n      autoCompleteType: \"name\",\n      returnKeyType: \"next\",\n      onChange: setFieldValue,\n      onTouch: setFieldTouched,\n      value: values.name,\n      error: touched.name && errors.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }), React.createElement(Input, {\n      name: \"username\",\n      label: \"Username\",\n      autoCompleteType: \"username\",\n      returnKeyType: \"next\",\n      onChange: setFieldValue,\n      onTouch: setFieldTouched,\n      value: values.username,\n      error: touched.username && errors.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }), React.createElement(Input, {\n      name: \"email\",\n      label: \"Email\",\n      autoCorrect: false,\n      autoCapitalize: \"none\",\n      keyboardType: \"email-address\",\n      autoCompleteType: \"email\",\n      returnKeyType: \"next\",\n      onChange: setFieldValue,\n      onTouch: setFieldTouched,\n      value: values.email,\n      error: touched.email && errors.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }), React.createElement(Input, {\n      name: \"password\",\n      label: \"Password\",\n      autoCompleteType: \"password\",\n      secureTextEntry: true,\n      returnKeyType: \"next\",\n      onChange: setFieldValue,\n      onTouch: setFieldTouched,\n      value: values.password,\n      error: touched.password && errors.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }), React.createElement(Input, {\n      name: \"repeat_password\",\n      label: \"Password Repeat\",\n      secureTextEntry: true,\n      returnKeyType: \"next\",\n      onChange: setFieldValue,\n      onTouch: setFieldTouched,\n      value: values.repeat_password,\n      error: touched.repeat_password && errors.repeat_password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }), React.createElement(Button, {\n      action: handleSubmit,\n      style: styles.buttonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, \"Register\"));\n  };\n\n  return React.createElement(Auth, {\n    styleLogo: styles.logo,\n    typeLogo: \"symbol\",\n    navigation: navigation,\n    back: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : Platform.OS === 'android',\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: submit,\n    validationSchema: Validation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, renderForm)))));\n}\n;","map":{"version":3,"sources":["C:/Projects/YourBand/yourband-app/src/Pages/Signup/index.js"],"names":["React","Formik","Auth","Button","Input","Notify","styles","signup","Validation","api","Signup","navigation","initialValues","name","username","email","password","repeat_password","submit","data","post","then","res","message","catch","err","response","renderForm","values","setFieldValue","setFieldTouched","touched","errors","handleSubmit","form","buttonSubmit","logo","Platform","OS","container"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  ScrollView\r\n} from 'react-native';\r\nimport {Formik} from 'formik';\r\n\r\nimport Auth from '../../Templates/Auth';\r\nimport { Button, Input, Notify } from '../../Components';\r\nimport styles from './styles';\r\nimport { signup as Validation } from '../../Validations';\r\nimport api from '../../Services/Api';\r\n\r\nexport default function Signup ({ navigation }) {\r\n\r\n  const initialValues = {\r\n    name: '',\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    repeat_password: ''\r\n  };\r\n\r\n  const submit = (data) => {\r\n\r\n    api.post('/signup', {\r\n      email: data.email,\r\n      name: data.name,\r\n      password:data.password,\r\n      username:data.username\r\n    })\r\n    .then(res => {\r\n\r\n      const {data, message} = res.data;\r\n      Notify(message, 'success');\r\n\r\n    })\r\n    .catch(err => {\r\n\r\n      const { message } = err.response.data;\r\n      Notify(message, 'error');\r\n    })\r\n  }\r\n\r\n  const renderForm = ({\r\n    values,\r\n    setFieldValue,\r\n    setFieldTouched,\r\n    touched,\r\n    errors,\r\n    handleSubmit\r\n  }) => (\r\n    <View style={styles.form}>\r\n\r\n      <Input\r\n        name=\"name\"\r\n        label=\"Name\"\r\n        autoCompleteType=\"name\"\r\n        returnKeyType=\"next\"\r\n        onChange={setFieldValue}\r\n        onTouch={setFieldTouched}\r\n        value={values.name}\r\n        error={touched.name && errors.name}\r\n      />\r\n\r\n      <Input\r\n        name=\"username\"\r\n        label=\"Username\"\r\n        autoCompleteType=\"username\"\r\n        returnKeyType=\"next\"\r\n        onChange={setFieldValue}\r\n        onTouch={setFieldTouched}\r\n        value={values.username}\r\n        error={touched.username && errors.username}\r\n      />\r\n\r\n      <Input\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        autoCorrect={false}\r\n        autoCapitalize=\"none\"\r\n        keyboardType=\"email-address\"\r\n        autoCompleteType=\"email\"\r\n        returnKeyType=\"next\"\r\n        onChange={setFieldValue}\r\n        onTouch={setFieldTouched}\r\n        value={values.email}\r\n        error={touched.email && errors.email}\r\n      />\r\n\r\n      <Input\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        autoCompleteType=\"password\"\r\n        secureTextEntry={true}\r\n        returnKeyType=\"next\"\r\n        onChange={setFieldValue}\r\n        onTouch={setFieldTouched}\r\n        value={values.password}\r\n        error={touched.password && errors.password}\r\n      />\r\n\r\n      <Input\r\n        name=\"repeat_password\"\r\n        label=\"Password Repeat\"\r\n        secureTextEntry={true}\r\n        returnKeyType=\"next\"\r\n        onChange={setFieldValue}\r\n        onTouch={setFieldTouched}\r\n        value={values.repeat_password}\r\n        error={touched.repeat_password && errors.repeat_password}\r\n      />\r\n\r\n      <Button action={handleSubmit} style={styles.buttonSubmit}>\r\n        Register\r\n      </Button>\r\n\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <Auth styleLogo={styles.logo} typeLogo=\"symbol\" navigation={navigation} back={true} >\r\n\r\n        <KeyboardAvoidingView behavior={Platform.OS === 'ios' ? 'padding' : Platform.OS==='android'} style={styles.container}>\r\n          <ScrollView>\r\n            <View>\r\n\r\n              <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={submit}\r\n                validationSchema={Validation}\r\n              >\r\n                {renderForm}\r\n              </Formik>\r\n\r\n            </View>\r\n          </ScrollView>\r\n        </KeyboardAvoidingView>\r\n\r\n    </Auth>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}